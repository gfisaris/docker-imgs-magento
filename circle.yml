machine:
  timezone:
    Europe/London
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker

dependencies:
  pre:
    - sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
    - sudo chmod +x /usr/local/bin/ecs-cli
    - sudo pip install docker-compose

compile:
  pre:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then docker build -t $AWS_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/$ECR_REPO:$CIRCLE_BUILD_NUM . ; fi
  post:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then sed "s/$ECR_REPO:latest/$ECR_REPO:$CIRCLE_BUILD_NUM/g" ecs-DockerCompose.yml > local-DockerCompose.yml ; fi

test:
  pre:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then eval $(aws ecr get-login --region $ECS_REGION) ; fi
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then docker-compose -f local-DockerCompose.yml up -d ; fi
  override:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then curl --retry 10 --retry-delay 5 127.0.0.1:$(docker-compose -f local-DockerCompose.yml port $ECR_REPO 80 | cut -d ":" -f "2")/fpm_ping | grep "pingpong" ; fi
  post:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then docker stop $(docker ps -a -q) ; fi


deployment:
  ecr:
    branch: master
    commands:
      - sh circle-ci/ecsCLiCompose.sh $ECS_REGION $ECS_CLUSTER $ECS_SERVICE $CIRCLE_BUILD_NUM || exit 1
      - sh circle-ci/push2ecr.sh $AWS_ACCOUNT_ID $ECS_REGION $ECR_REPO $CIRCLE_BUILD_NUM || exit 1
      - sh circle-ci/ecsUpdateService.sh $AWS_ACCOUNT_ID $ECS_REGION $ECS_CLUSTER $ECS_SERVICE $ECS_TASKDFN || exit 1
  cidemo:
    tag: /cidemo-.*/
    commands:
      - echo "Testing AutoBuilds based on Git Tags"
