machine:
  timezone:
    Europe/London
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker

dependencies:
  pre:
    - sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
    - sudo chmod +x /usr/local/bin/ecs-cli

compile:
  pre:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then docker build -t $CI_AWS_ACCOUNT_ID.dkr.ecr.$CI_AWS_ACTIVE_REGION.amazonaws.com/$CI_AWS_ECR_REPO:$CIRCLE_BUILD_NUM . ; fi
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then docker images ; fi
test:
  pre:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then sh circle-ci/genEnv.sh $CIRCLE_BUILD_NUM ci || exit 1  ; fi
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then sh circle-ci/testBuild.sh || exit 1  ; fi
  post:
    - if [[ $CIRCLE_BRANCH = "master" ]] ; then sh circle-ci/push2ecr.sh || exit 1  ; fi


deployment:
  intergration_env:
    branch: master
    commands:
      - echo "Initializing deployment to Integration Environment"
      - sh circle-ci/genEnv.sh latest integration || exit 1
      - sh circle-ci/ecsCLiCompose.sh integration || exit 1
      - sh circle-ci/ecsUpdateService.sh integration || exit 1
  staging_env:
    tag: /staging-.*/
    commands:
      - echo "Initializing deployment to Staging Environment"
      - sh circle-ci/genEnvFile.sh latest stg || exit 1
      - sh circle-ci/ecsCLiCompose.sh staging || exit 1
      - sh circle-ci/ecsUpdateService.sh staging || exit 1
  production_env:
    tag: /production-.*/
    commands:
      - echo "Initializing deployment to Production Environment"
      - sh circle-ci/genEnvFile.sh latest prod || exit 1
      - sh circle-ci/ecsCLiCompose.sh production || exit 1
      - sh circle-ci/ecsUpdateService.sh production || exit 1
